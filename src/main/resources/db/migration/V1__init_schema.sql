create table problem (id bigint generated by default as identity, creation_date timestamp(6), description TEXT not null, difficulty varchar(255) not null check (difficulty in ('EASY','MEDIUM','HARD')), title varchar(255) not null, primary key (id));
create table problem_tags (problem_id bigint not null, tag_id bigint not null, primary key (problem_id, tag_id));
create table roles (id bigint generated by default as identity, name varchar(255) not null check (name in ('ADMIN','MODERATOR','USER','PREMIUM_USER','YEE')), primary key (id));
create table submission (id bigint generated by default as identity, code TEXT not null, language varchar(255) not null check (language in ('JAVA','PYTHON','C')), output TEXT, status varchar(255) not null check (status in ('PENDING','RUNNING','ACCEPTED','WRONG_ANSWER','COMPILE_ERROR','RUNTIME_ERROR','TIME_LIMIT_ERROR','MEMORY_LIMIT_ERROR','INTERNAL_ERROR','CANCELLED')), submitted_at timestamp(6), problem_id bigint not null, user_id bigint not null, primary key (id));
create table tag (id bigint generated by default as identity, name varchar(255) not null check (name in ('DESIGN','ARRAYS','LINKED_LIST','SLIDING_WINDOW','HASH_TABLE','TREE','BINARY_SEARCH','COUNTING','BACKTRACKING','MERGE_SORT','SORTING','TWO_POINTERS','STACK','QUEUE','RECURSION','BINARY_SEARCH_TREE','STRING','DYNAMIC_PROGRAMMING','MATH','GREEDY','GRAPH','HEAP','PREFIX_SUM','ORDERED_SET')), primary key (id));
create table test_case (id bigint generated by default as identity, expected_output TEXT, input TEXT, is_sample boolean not null, problem_id bigint not null, primary key (id));
create table user_roles (user_id bigint not null, role_id bigint not null, primary key (user_id, role_id));
create table users (id bigint generated by default as identity, creation_date timestamp(6) not null, email varchar(255) not null, name varchar(255) not null, password varchar(255) not null, primary key (id));

alter table problem add constraint UK_problem_title unique (title);
alter table roles add constraint UK_roles_name unique (name);
alter table users add constraint UK_users_email unique (email);

alter table problem_tags add constraint FK_problem_tags_tag_id foreign key (tag_id) references tag(id);
alter table problem_tags add constraint FK_problem_tags_problem_id foreign key (problem_id) references problem(id);
alter table submission add constraint FK_submission_problem_id foreign key (problem_id) references problem(id);
alter table submission add constraint FK_submission_user_id foreign key (user_id) references users(id);
alter table test_case add constraint FK_test_case_problem_id foreign key (problem_id) references problem(id);
alter table user_roles add constraint FK_user_roles_role_id foreign key (role_id) references roles(id);
alter table user_roles add constraint FK_user_roles_user_id foreign key (user_id) references users(id);